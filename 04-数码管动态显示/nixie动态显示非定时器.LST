C51 COMPILER V9.52.0.0   NIXIE________________                                             04/02/2020 09:06:36 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE NIXIE________________
OBJECT MODULE PLACED IN nixie动态显示非定时器.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE nixie动态显示非定时器.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<STC15F2K60S2.H>
   2          #include"intrins.h"
   3          
   4          
   5          
   6          //段码设置好不会再变，设置表格形式减少内存
   7          unsigned char code SMG_Duanma[20] = 
   8             {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,
   9              0x80,0x90,0x88,0x80,0xc6,0xc0,0x86,0x8e,
  10              0xbf,0x7f,0x3f,0xff};
  11          void DisplaySMG_DT();   
  12          unsigned char display_buffer[8]={0,2,2,0,0,0,0,0};
  13          
  14          unsigned char cnt=0;
  15          unsigned char t_s=0,t_m=0,t_h=0;
  16          
  17          void Delay1ms()   //@11.0592MHz
  18          {
  19   1        unsigned char i, j;
  20   1      
  21   1        _nop_();
  22   1        _nop_();
  23   1        _nop_();
  24   1        i = 11;
  25   1        j = 190;
  26   1        do
  27   1        {
  28   2          while (--j);
  29   2        } while (--i);
  30   1      }
  31            
  32          void SelectHC573(unsigned char channel)
  33          {
  34   1        switch(channel)
  35   1        {
  36   2          case 4:
  37   2            P2=(P2 & 0x1f)| 0x80;
  38   2            break;
  39   2          case 5:
  40   2            P2=(P2 & 0x1f)| 0xa0;
  41   2            break;
  42   2          case 6:
  43   2            P2=(P2 & 0x1f)| 0xc0;
  44   2            break;
  45   2          case 7:
  46   2            P2=(P2 & 0x1f)| 0xe0;
  47   2            break;
  48   2          case 0:
  49   2            P2=(P2 & 0x1f)|0x00;
  50   2        }
  51   1      }
  52          
  53          void DisplaySMG_Bit(unsigned char value , unsigned char pos)
  54          {
  55   1        SelectHC573(7);
C51 COMPILER V9.52.0.0   NIXIE________________                                             04/02/2020 09:06:36 PAGE 2   

  56   1        P0=0xff;   //消影
  57   1        SelectHC573(6);
  58   1        P0 = 0x01 << pos;     //选择位置
  59   1        SelectHC573(0);
  60   1        SelectHC573(7);
  61   1        P0 = value;    //选择该位显示的内容
  62   1      }
  63          
  64          
  65          void Display_SMG_Buffer_Change(unsigned char d0,d1,d2,d3,d4,d5,d6,d7)
  66          {
  67   1        display_buffer[0]=d0;
  68   1        display_buffer[1]=d1;
  69   1        display_buffer[2]=d2;
  70   1        display_buffer[3]=d3;
  71   1        display_buffer[4]=d4;
  72   1        display_buffer[5]=d5;
  73   1        display_buffer[6]=d6;
  74   1        display_buffer[7]=d7;
  75   1        DisplaySMG_DT();
  76   1      }
  77          
  78          //*******************非中断函数**********************
  79          
  80          
  81          //void DisplaySMG_DT()
  82          //{
  83          //  DisplaySMG_Bit(SMG_Duanma[display_buffer[0]],0);
  84          //  Delay();
  85          //  DisplaySMG_Bit(SMG_Duanma[display_buffer[1]],1);
  86          //  Delay();
  87          //  DisplaySMG_Bit(SMG_Duanma[display_buffer[2]],2);
  88          //  Delay();
  89          //  DisplaySMG_Bit(SMG_Duanma[display_buffer[3]],3);
  90          //  Delay();
  91          //  
  92          //  DisplaySMG_Bit(SMG_Duanma[display_buffer[4]],4);
  93          //  Delay();
  94          //  DisplaySMG_Bit(SMG_Duanma[display_buffer[5]],5);
  95          //  Delay();
  96          //  
  97          //  DisplaySMG_Bit(SMG_Duanma[display_buffer[6]],6);
  98          //  Delay();
  99          //  DisplaySMG_Bit(SMG_Duanma[display_buffer[7]],7);
 100          //  Delay();
 101          //}
 102          
 103          void DisplaySMG_DT()
 104          {
 105   1        unsigned char num=0;
 106   1        while(num<8)
 107   1        {
 108   2          DisplaySMG_Bit(SMG_Duanma[display_buffer[num]],num);
 109   2          Delay1ms();
 110   2          num++;
 111   2        }
 112   1        if(num==8)
 113   1          num=0;
 114   1      }
 115          
 116          
 117          
C51 COMPILER V9.52.0.0   NIXIE________________                                             04/02/2020 09:06:36 PAGE 3   

 118          void DelaySMG(unsigned int t)
 119          {
 120   1        while(t--)
 121   1        {
 122   2          DisplaySMG_DT();
 123   2        }
 124   1      }
 125          
 126          void Init_Timer0()
 127          {
 128   1        TMOD=0x01;
 129   1        TH0=(65535-50000)/256;
 130   1        TL0=(65535-50000)%256;
 131   1        
 132   1        ET0=1;
 133   1        TR0=1;
 134   1        EA=1;
 135   1      }
 136          
 137          void Server_Timer0() interrupt 1
 138          {
 139   1        TH0=(65535-50000)/256;
 140   1        TL0=(65535-50000)%256;
 141   1        
 142   1        cnt++;
 143   1        if(cnt==20)
 144   1        {
 145   2          t_s++;
 146   2          cnt=0;
 147   2        }
 148   1        if(t_s==60)
 149   1        {
 150   2          t_m++;
 151   2          t_s=0;
 152   2        }
 153   1        if(t_m==60)
 154   1        {
 155   2          t_h++;
 156   2          t_m=0;
 157   2        }
 158   1      }
 159          
 160          
 161          
 162          
 163          void main()
 164          {
 165   1        unsigned char t_t=60;
 166   1        SelectHC573(4);
 167   1        P0=0xff;
 168   1        Init_Timer0();
 169   1      
 170   1        while(1)
 171   1        {
 172   2          Display_SMG_Buffer_Change((t_h/10),(t_h%10),16,(t_m/10),(t_m%10),16,(t_s/10),(t_s%10));
 173   2          
 174   2          DelaySMG(10);
 175   2        }
 176   1      }
 177          
 178          
 179          
C51 COMPILER V9.52.0.0   NIXIE________________                                             04/02/2020 09:06:36 PAGE 4   

 180          
 181          
 182          
 183          
 184          
 185          
 186          
 187          
 188          
 189          
 190          
 191          
 192          
 193          
 194          
 195          
 196          
 197          
 198          
 199          
 200          
 201          
 202          
 203          
 204          
 205          
 206          
 207          
 208          
 209          
 210          
 211          
 212          
 213          
 214          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    348    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
